---

- name: Input expectations are verified
  assert:
    that:
        - 'inventory_hostname != "localhost"'
        - 'creation_command is defined'
        - 'destruction_command is defined'
        - 'creation_destruction_environment is defined'
        - 'creation_destruction_asserts is defined'

# Allows customized checking of jinja templates / variables in cloud_provisioning_command
- name: Subject's list of optional creation_destruction_asserts are all true
  assert:
    that: '{{ creation_destruction_asserts }}'
  # Don't actually fail the task, still attempt to destroy subject
  ignore_errors: True
  when: creation_destruction_asserts | default('', True) | length

- name: Subject's destruction_command is executed
  command: "{{ destruction_command.command }}"
  environment: "{{ creation_destruction_environment if creation_destruction_environment | default('', True) | trim | length else {} }}"
  args:
    chdir: "{{ destruction_command.chdir | default(playbook_dir) }}"
    executable: "{{ destruction_command.executable | default(omit) }}"
    creates: "{{ destruction_command.creates | default(omit) }}"
    removes: "{{ destruction_command.removes | default(omit) }}"
  # There are many ways this could fail, hostvarsfile update affects ultimate removal
  failed_when: False
  register: result
  delegate_to: localhost

- name: Subjects not in permanent group, are removed
  include_role:
    name: invcache
  vars:
    ic_opr: 'delete'
