---

- name: Input expectations are verified
  assert:
    that:
      - "hostvarsfile_updates is defined"
      - 'source_role | default("", True) | trim | length'
      - 'hostvarsfile | default("", True) | trim | length'
      - 'hostvarsfile | is_file'

- name: Buffer is initialized for updated hostvars
  set_fact:
    # Must not re-use 'results' here, very strange things will happen
    _updates: {}

- name: subject's hostvarsfile is filtered into buffer, except "DELETEME" items
  set_fact:
    _updates: "{{ _updates | combine({item.key: item.value}) }}"
  when: item.value != "DELETEME"
  no_log: True
  # Workaround yaml/json parsing bug in some ansible versions
  with_dict: '{{ (lookup("file", hostvarsfile) | from_yaml | to_json | from_json)
                 | combine(hostvarsfile_updates | default({})) }}'
  # Fix vim syntax highlighting: '

- name: This host's hostvarsfile is backed up prior to replacement
  command: 'mv "{{ hostvarsfile }}" "{{ hostvarsfilebackup }}"'
  delegate_to: localhost
  when: not hostvarsfilebackup | is_file and
        not hostvarsfilebackup | is_link

- name: subject's hostvarsfile is removed prior to replacement
  file:
    path: '{{ hostvarsfile }}'
    state: absent
  delegate_to: localhost
  when: hostvarsfilebackup | is_file or
        hostvarsfilebackup | is_link

- name: subject's hostvarsfile is replaced with updated contents
  blockinfile:
    path: '{{ hostvarsfile }}'
    create: True
    follow: True
    marker: "##### {mark} ANSIBLE MANAGED FILE (Updated by role: {{ source_role }})"
    block: |
      {{ _updates | to_json | from_json | to_nice_yaml(indent=4) }}
  delegate_to: localhost

- name: hostvarsfile is reloaded to incorporate possibly changed values
  include_vars: '{{ hostvarsfile }}'
