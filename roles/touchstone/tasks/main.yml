---

- name: stone_touched fact is initially false
  set_fact:
    stone_touched: False

- name: Input expectations are verified
  assert:
    that:
      - 'hostvars.localhost.ansible_machine_id | default("", True) | trim | length'
      - 'stone_touched == False'  # make sure it's not read-only
      - 'touchstone_filepath | default("", True) | trim | length'
      - 'touch_touchstone | default(False) in [True, False]'
      - '"{{ role_path }}/files/touchstone.py" | is_file'

- name: Script command-line arguments are initialized
  set_fact:
    result: 'touchstone.py'

- name: Script command-line has --touch appended
  set_fact:
    result: '{{ result }} --touch'
  when: touch_touchstone | default(False)

- name: Script command-line has touchstone_filepath appended
  set_fact:
    result: '{{ result }} {{ touchstone_filepath }}'

- name: Script command-line has content lines appended
  set_fact:
    result: '{{ result }} {{ item | quote }}'
  with_items:
    - 'Touched by {{ hostvars.localhost.ansible_nodename }}'
    - 'Machine_id {{ hostvars.localhost.ansible_machine_id }}'
    - 'On {{ hostvars.localhost.ansible_date_time.iso8601 }}'

- name: Touchstone is modified if needed
  block:

    - name: Script is executed to modify and retrieve touchstone status
      script: '{{ result }}'
      register: result

    - name: Script output expectations are verified
      assert:
        that: 'result.stdout | trim in ["True","False"]'

    - name: Touchstone result is converted into boolean
      set_fact:
        stone_touched: '{{ result.stdout | bool }}'

  when: subject_created and not ansible_check_mode

- name: The stone_touched variable is debugged
  debug:
    var: stone_touched
